[{"content":"","date":"2 February 2024","externalUrl":null,"permalink":"/","section":"Alberto Olvera","summary":"","title":"Alberto Olvera","type":"page"},{"content":" Granting Sudo Privileges on AlmaLinux 9.2 # Empower users in your home lab with sudo access! This guide walks you through adding a user with administrative privileges on AlmaLinux 9.2.\nNon-Sudo Users: # For users who don\u0026rsquo;t require administrative privileges, simply follow steps 1 and 2 below. These users will have basic access to the system but won\u0026rsquo;t be able to execute commands with sudo.\nWhy Sudo Users? # Sudo allows authorized users to execute commands with elevated permissions, crucial for managing your server effectively.\nSteps: # Create a New User:\nOpen a terminal and run:\nsudo useradd myuser Replace \u0026ldquo;myuser\u0026rdquo; with your desired username.\nSet a Strong Password:\nUse the passwd command followed by the username:\npasswd myuser Enter and confirm a strong password for the user. Here are some strong password practices:\nLength: Use a password with at least 12 characters. Complexity: Combine uppercase and lowercase letters, numbers, and symbols. Uniqueness: Avoid using the same password for multiple accounts. Password Managers: Consider using a password manager to generate and store strong, unique passwords for all your accounts. Grant Sudo Access:\nLinux uses groups to manage permissions. The \u0026ldquo;wheel\u0026rdquo; group has sudo access by default. Let\u0026rsquo;s add \u0026ldquo;myuser\u0026rdquo; to the \u0026ldquo;wheel\u0026rdquo; group:\nsudo usermod -aG wheel myuser Verify Sudo Access (Optional):\nSwitch to the new user:\nsu - myuser Try running a command with sudo:\nsudo ls /root If prompted for the user\u0026rsquo;s password and the command executes, sudo access is granted.\nService Accounts vs. User Accounts # So far, we\u0026rsquo;ve discussed user accounts, which are for human users who log in and interact with the system. There\u0026rsquo;s another type of account: the service account.\nService Accounts: # These accounts are used by programs or services running on your system. They provide a secure way for these programs to access resources without requiring human intervention or a traditional user login. Service accounts often have specific permissions assigned to them, allowing them to perform limited tasks.\nUser Accounts vs. Service Accounts: # The key difference is that user accounts are for human users, while service accounts are for automated tasks. Furthermore, service accounts often don\u0026rsquo;t have a login shell like users do, in certain distributions, they have /usr/sbin/nologin as login shell.\nUser accounts typically have more privileges and require a password for login, while service accounts are designed for secure programmatic access with limited permissions.\nSecurity First! # Here are some key security practices to follow when managing users and permissions on your AlmaLinux server:\nPrinciple of Least Privilege: Grant users only the minimum permissions they need to perform their tasks. This minimizes the damage if a user account is compromised. Strong Password Policies: Enforce strong password requirements as mentioned previously. Consider using a password manager and avoid sharing passwords. Disable Root Login: For enhanced security, disable direct root login via SSH. Use sudo for administrative tasks when necessary. Regular Updates: Keep your system software and packages updated to address security vulnerabilities. Monitor System Activity: Regularly review system logs for suspicious activity. By following these security best practices, you can minimize the risk of unauthorized access and keep your AlmaLinux server secure.\nNow you have a dedicated sudo user for managing your AlmaLinux server, separate non-privileged users for everyday tasks, and an understanding of service accounts for automated processes!\nRemember, responsible permission management and strong security practices are key to maintaining a secure and stable system. ","date":"2 February 2024","externalUrl":null,"permalink":"/posts/20240202-almalinux-2/","section":"Posts","summary":"This entry guides users through creating a new user, setting a password, and granting sudo access","title":"Building Your Home Lab: Alma Linux Administration Basics (Part 2)","type":"posts"},{"content":"","date":"2 February 2024","externalUrl":null,"permalink":"/tags/cli/","section":"Tags","summary":"","title":"CLI","type":"tags"},{"content":"","date":"2 February 2024","externalUrl":null,"permalink":"/tags/home-lab/","section":"Tags","summary":"","title":"Home Lab","type":"tags"},{"content":"","date":"2 February 2024","externalUrl":null,"permalink":"/tags/linux-admin/","section":"Tags","summary":"","title":"Linux Admin","type":"tags"},{"content":"","date":"2 February 2024","externalUrl":null,"permalink":"/posts/","section":"Posts","summary":"","title":"Posts","type":"posts"},{"content":"","date":"2 February 2024","externalUrl":null,"permalink":"/tags/","section":"Tags","summary":"","title":"Tags","type":"tags"},{"content":"Welcome to the first installment of our series on running Alma Linux for your home lab server needs! Whether you\u0026rsquo;re a seasoned Linux user or just starting your journey, a home lab is a fantastic way to experiment, learn new skills, and host your own personal services. Alma Linux, a stable and community-driven Red Hat Enterprise Linux (RHEL) fork, provides a robust foundation for building your home lab environment.\nWhy Alma Linux? # There are several reasons why Alma Linux is a great choice for home labs:\nStability: Based on RHEL, Alma Linux inherits its renowned stability and focus on long-term support. This ensures your servers run smoothly and receive security updates for an extended period. Familiarity: If you plan to pursue Red Hat certifications or work in RHEL environments, Alma Linux offers a familiar experience that translates directly to those settings. Community-Driven: Backed by a strong community, Alma Linux offers ample resources and support to help you navigate any challenges. Installation with Proxmox # Since I\u0026rsquo;m utilizing a Proxmox cluster, I\u0026rsquo;ll cover its installation on a setup similar to mine.\nGrab the desired Alma Linux version, I downloaded their ISO from their official downloads site. Within the proxmox web interface, create a new VM. Allocate desired CPU cores, memory, and storage resources. When booting up the new VM, Alma Linux will guide us through its installation on a nice GUI, here you can select the language of the installaton and settings like the root password. During Alma Linux installation, configure settings like language and encryption, then choose additional software based on your preferred base environment. In this guide, we have chosen to go with the Server selection. Feel free to select your preferred environment and select any additional components from the right panel. Once you are happy with your selections, hit the ‘Done’ button to go back. Basic Administration Essentials # Once you have Alma Linux installed, let\u0026rsquo;s explore some fundamental administration tasks:\nCommand Line Interface (CLI): The CLI, also known as the terminal, is your primary tool for interacting with Alma Linux. Familiarize yourself with basic navigation commands like cd (change directory), ls (list directory contents), and man (access manual pages for commands). Package Management: Alma Linux uses the RPM package manager (dnf). Learn how to install, update, and remove packages using commands like dnf install \u0026lt;package_name\u0026gt;, dnf update, and dnf remove \u0026lt;package_name\u0026gt;. User Management: Create and manage user accounts for accessing your server. Use the useradd, passwd, and userdel commands to add, set passwords for, and delete users, respectively. Remember, the root user account is powerful, so exercise caution when using it. Firewall Management: The firewall controls incoming and outgoing network traffic. Tools like firewall-cmd allow you to configure firewall rules to secure your server. Learning Resources # This is just a taste of the exciting world of Alma Linux administration. Here are some resources to deepen your knowledge:\nAlma Linux Documentation: https://wiki.almalinux.org/ Red Hat System Administration Guide: https://www.redhat.com/en/services/certification/rhcsa (While not Alma Linux specific, offers valuable insights into RHEL administration) Online Tutorials: Numerous online tutorials and courses cater to all experience levels. Looking Ahead # In the next part of our series, we\u0026rsquo;ll delve into specific server applications you can deploy on your Alma Linux home lab, along with configuration and management details. Stay tuned to explore the potential of your home lab environment!\n","date":"1 February 2024","externalUrl":null,"permalink":"/posts/20240201-almalinux-1/","section":"Posts","summary":"We explore why Alma Linux is a great choice and how to get started","title":"Building Your Home Lab: Alma Linux Administration Basics (Part 1)","type":"posts"},{"content":"","date":"14 May 2023","externalUrl":null,"permalink":"/tags/azure/","section":"Tags","summary":"","title":"Azure","type":"tags"},{"content":"","date":"14 May 2023","externalUrl":null,"permalink":"/tags/containers/","section":"Tags","summary":"","title":"Containers","type":"tags"},{"content":"In the world of cloud computing, we constantly strive for efficient and agile application deployment. Virtual machines (VMs) have long been the workhorse, but they can be cumbersome. Enter containers: a lighter-weight alternative that streamlines application delivery.\nThis blog post unpacks the fundamentals of containerization, exploring its benefits and how it integrates with Azure services like Azure Container Registry (ACR) and Azure Container Instances (ACI).\nVirtual Machines vs. Containers\nThink of VMs as self-contained computers running within a physical machine. Each VM has its own operating system (OS), consuming resources even when applications are idle. This can lead to maintenance overhead and slow deployments.\nContainers, on the other hand, share the host machine\u0026rsquo;s OS. They package an application with all its dependencies into a single unit, making them portable and efficient. This translates to faster deployments and a smaller footprint.\nBenefits of Containers\nPortability: Containers run seamlessly across different environments, whether on-premises, in the cloud, or on a laptop. Scalability: Easily scale applications up or down by adding or removing containers. Agility: Faster deployments and rollbacks due to the lightweight nature of containers. Resource Efficiency: Containers share the host OS, minimizing resource consumption. Building and Running Containers with Docker\nDocker is a popular tool for building, managing, and running containers. A Dockerfile specifies the instructions to create a container image, essentially a blueprint for your application.\nHere\u0026rsquo;s a simplified breakdown of a Dockerfile structure:\nBase Image: Define the base OS image using the FROM instruction. Environment Variables: Configure environment variables specific to your application. Working Directory: Create a directory for your application using RUN mkdir and set it as the working directory with WORKDIR. Application Binaries: Copy the application binaries into the container using COPY. Scripts: Copy and run any necessary scripts using RUN and specifying the shell environment. Expose Ports: Expose the application\u0026rsquo;s port using the EXPOSE command. Entrypoint: Define the startup command using the ENTRYPOINT instruction. Once the Dockerfile is created, use the docker build command to build the container image.\nAzure Container Registry (ACR)\nACR is a managed Docker registry service that simplifies storing and managing container images. It integrates seamlessly with your CI/CD pipeline, automating the build, test, and push process for container images.\nACR uses Azure Active Directory (AAD) for authentication, ensuring secure access. You can also leverage Role-Based Access Control (RBAC) to define permissions for users and tools.\nAzure Container Instances (ACI)\nACI is a serverless container deployment platform. You can deploy containerized applications without managing the underlying infrastructure. ACI supports both Windows and Linux containers and allows you to specify resource requirements like CPU and memory.\nFor persistent storage, you can integrate Azure Files with ACI. ACI also offers policies to define container restart behavior in case of application failures.\nKey Takeaway\nContainers offer a powerful and efficient way to package and deploy applications. By leveraging Azure services like ACR and ACI, cloud consultants can streamline containerized application development and deployment in the Azure cloud.\nRemember: While this blog post focuses on Azure container services, the core concepts of containers and Docker are applicable across different cloud providers.\n","date":"14 May 2023","externalUrl":null,"permalink":"/posts/202305-containers/","section":"Posts","summary":"Exploring Containers in Azure","title":"Containers 101: A Cloud Consultant's Guide","type":"posts"},{"content":"","date":"10 February 2023","externalUrl":null,"permalink":"/tags/networking/","section":"Tags","summary":"","title":"Networking","type":"tags"},{"content":"This post dives into the essential services that make your network tick: DNS, DHCP, and proxies. Understanding these services empowers you to manage your home lab with confidence and optimize its performance.\nDNS: The Address Book of the Internet # Imagine the internet without domain names like google.com DNS (Domain Name System) acts as the internet\u0026rsquo;s address book, translating user-friendly domain names into numerical IP addresses that computers understand. Here\u0026rsquo;s a breakdown of the key DNS components:\nDNS Servers: These are the workhorses of DNS. There are several types:\nCaching Servers: Provided by your ISP or local network, these store recent lookups to speed up future requests. Recursive Servers: Also from your ISP or local network, these perform full resolution if the answer isn\u0026rsquo;t in the cache. Root Servers: The foundation of the DNS hierarchy, these 13 servers direct requests to the appropriate TLD server. TLD Servers: Manage top-level domains like \u0026ldquo;.com\u0026rdquo; or \u0026ldquo;.org\u0026rdquo; and point queries to the authoritative name server. Authoritative Servers: The final stop, these servers hold the actual IP address for a specific domain. DNS Records: These are like entries in the address book, providing various details about a domain:\nA Record: Maps a domain name to an IPv4 address (e.g., \u0026ldquo;[invalid URL removed]\u0026rdquo; -\u0026gt; 142.250.68.139) AAAA Record: Similar to A record, but for IPv6 addresses. CNAME Record: Redirects traffic from one domain to another (e.g., \u0026ldquo; www.example.com\u0026rdquo; CNAME \u0026ldquo;example.com\u0026rdquo;) MX Record: Directs emails to the correct mail server. SRV Record: Defines the location of specific services like chat or video conferencing. TXT Record: Stores additional text data for the domain. SOA Record: Specifies the authoritative name server for a domain zone. NS Record: Lists other name servers responsible for a zone. DHCP: Automating Network Configuration # Tired of manually assigning IP addresses to every device? DHCP (Dynamic Host Configuration Protocol) comes to the rescue. It automates network configuration for devices on your network, assigning IP addresses, subnet masks, default gateways, and name servers.\nDHCP Process: A device broadcasts a \u0026ldquo;DHCP Discover\u0026rdquo; message. The DHCP server offers a lease (temporary IP) with a \u0026ldquo;DHCP Offer\u0026rdquo; message. The device requests the offered lease with a \u0026ldquo;DHCP Request\u0026rdquo; message. The server acknowledges with a \u0026ldquo;DHCP Ack\u0026rdquo; message, finalizing the configuration. Leases expire, requiring renewal or a new lease negotiation. Proxies: The Middlemen of the Web # A proxy server acts as an intermediary between your device and the internet. It can provide various functionalities:\nSecurity: Filters malicious content or protects your device\u0026rsquo;s identity. Caching: Stores frequently accessed data to speed up browsing. Content Filtering: Restricts access to certain websites. Load Balancing: Distributes traffic across multiple servers for better performance. The Takeaway # Understanding DNS, DHCP, and proxies empowers you to manage your home lab network effectively. You can optimize performance, improve security, and gain granular control over how your devices connect to the internet. With this knowledge, your home lab can become a powerful platform for experimentation and learning!\n","date":"10 February 2023","externalUrl":null,"permalink":"/posts/202302-basicnetworking/","section":"Posts","summary":"Exploring basic networking concepts for the homelab","title":"Networking 101: DNS, DHCP, and Proxies","type":"posts"},{"content":"Hi! This is my space to share my knowledge and explore all things tech, especially the world of infrastructure, cloud computing, and the ever-evolving landscape of DevOps. I\u0026rsquo;m a passionate DevOps engineer with a few years of experience under my belt, but my curiosity keeps me diving into different areas – backend development, frontend exploration, and even cloud administration.\nWhether I\u0026rsquo;m tackling infrastructure projects or delving into the latest DevOps trends, I genuinely enjoy the process of learning and creating. This blog is my way to share that journey with you!\nThanks for joining me!\nHere\u0026rsquo;s what you can expect:\nIn-depth dives: I\u0026rsquo;ll tackle technical topics related to infrastructure, cloud, and DevOps, providing insightful explanations and practical tips. Real-world experiences: Learn from my adventures (and mishaps!) as I navigate the ever-changing tech landscape. A touch of enthusiasm: My passion for tech is contagious, and I hope to spark your curiosity and inspire you to explore new things. No matter your tech background, there\u0026rsquo;s something here for everyone. Let\u0026rsquo;s learn and grow together!\nP.S. Feel free to reach out and connect with me!\n","date":"1 January 0001","externalUrl":null,"permalink":"/about/","section":"Alberto Olvera","summary":"Hi! This is my space to share my knowledge and explore all things tech, especially the world of infrastructure, cloud computing, and the ever-evolving landscape of DevOps.","title":"About","type":"page"},{"content":"","date":"1 January 0001","externalUrl":null,"permalink":"/authors/","section":"Authors","summary":"","title":"Authors","type":"authors"},{"content":"","date":"1 January 0001","externalUrl":null,"permalink":"/categories/","section":"Categories","summary":"","title":"Categories","type":"categories"},{"content":" Experience Company Link Role Dates Location Thomson Reuters Senior DevOps Engineer 2023 - Present Mexico City, Mexico Honeywell Software Engineer 2021 - 2023 Mexico City, Mexico Education School Link Degree Date Location Instituto Politecnico Nacional BSc, Control and Automation Engineering 2017-2022 Mexico City, Mexico ","date":"1 January 0001","externalUrl":null,"permalink":"/resume/","section":"Alberto Olvera","summary":" Experience Company Link Role Dates Location Thomson Reuters Senior DevOps Engineer 2023 - Present Mexico City, Mexico Honeywell Software Engineer 2021 - 2023 Mexico City, Mexico Education School Link Degree Date Location Instituto Politecnico Nacional BSc, Control and Automation Engineering 2017-2022 Mexico City, Mexico ","title":"Resume","type":"page"},{"content":"","date":"1 January 0001","externalUrl":null,"permalink":"/series/","section":"Series","summary":"","title":"Series","type":"series"}]